<launch>
    <!-- arguments -->
    <arg name="base_frame" default="base"/>
    <arg name="table_frame" default="table"/>
    <arg name="head_frame" default="head_camera"/>

    <arg name="image_service" default="/sensing/image"/>
    <arg name="caminfo_service" default="/sensing/caminfo"/>
    <arg name="object_service" default="/sensing/objects"/>
    
    <!-- parameter server -->
    <param name="frames/base" value="$(arg base_frame)"/>
    <param name="frames/table" value="$(arg table_frame)"/>
    <param name="frames/head" value="$(arg head_frame)"/>

    <param name="services/image" value="$(arg image_service)"/>
    <param name="services/caminfo" value="$(arg caminfo_service)"/>
    <param name="services/object" value="$(arg object_service)"/>
    
    <!-- bringup sawyer -->
    <node name="sawyer_bringup" pkg="intera_interface" type="enable_robot.py" 
    output="screen" args="-e" />
    <include file="(find intera_examples)/launch/sawyer_tuck.launch"/>
    <node name="action_server" pkg="intera_interface" type="joint_trajectory_action_server.py"
    required="true" output="screen" args=""/>
    <include file="(find sawyer_moveit_config)/launch/sawyer_moveit.launch"/>
    
    <!-- static table frame -->
    <node name="table_broadcaster" pkg="tf2_ros" type="static_transform_publisher" 
    required="true" args="1 0 0 0 0 0 1 $(arg base_frame) $(arg table_frame)" />

    <!-- sensing nodes -->
    <include file="(find sensing)/launch/cv.launch"/>

    <!-- planning nodes -->
    <node name="moveit_agent" pkg="planning" type="moveit_agent.py"
    output="screen" args=""/>
</launch>